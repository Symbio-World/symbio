// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
          "overflow": "hidden",
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                        },
                      ],
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        onLayout={[Function]}
                        style={
                          Object {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            accessibilityElementsHidden={false}
                            closing={false}
                            gestureVelocityImpact={0.3}
                            importantForAccessibility="auto"
                            onClose={[Function]}
                            onGestureBegin={[Function]}
                            onGestureCanceled={[Function]}
                            onOpen={[Function]}
                            onTransitionStart={[Function]}
                            pointerEvents="box-none"
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            transitionSpec={
                              Object {
                                "close": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 0.01,
                                    "restSpeedThreshold": 0.01,
                                    "stiffness": 1000,
                                  },
                                },
                                "open": Object {
                                  "animation": "spring",
                                  "config": Object {
                                    "damping": 500,
                                    "mass": 3,
                                    "overshootClamping": true,
                                    "restDisplacementThreshold": 0.01,
                                    "restSpeedThreshold": 0.01,
                                    "stiffness": 1000,
                                  },
                                },
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                collapsable={false}
                                onGestureHandlerEvent={[Function]}
                                onGestureHandlerStateChange={[Function]}
                                style={
                                  Object {
                                    "flex": 1,
                                    "transform": Array [
                                      Object {
                                        "translateX": 0,
                                      },
                                      Object {
                                        "translateX": 0,
                                      },
                                    ],
                                  }
                                }
                              >
                                <View
                                  pointerEvents="none"
                                  style={
                                    Object {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "shadowColor": "#000",
                                      "shadowOffset": Object {
                                        "height": 1,
                                        "width": -1,
                                      },
                                      "shadowOpacity": 0.3,
                                      "shadowRadius": 5,
                                      "top": 0,
                                      "width": 3,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "flex": 1,
                                        "overflow": "hidden",
                                      },
                                      Array [
                                        Object {
                                          "backgroundColor": "rgb(242, 242, 242)",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "flex": 1,
                                        "flexDirection": "column-reverse",
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Array [
                                            Object {
                                              "flex": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <BarcodePicker
                                          onBarcodeFrameAvailable={[Function]}
                                          onChangeTrackedCodes={[Function]}
                                          onPropertyChanged={[Function]}
                                          onRecognizeNewCodes={[Function]}
                                          onScan={[Function]}
                                          onSettingsApplied={[Function]}
                                          onTextRecognized={[Function]}
                                          onWarnings={[Function]}
                                          scanSettings={
                                            ScanSettings {
                                              "symbologies": Object {
                                                "code128": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "code39": SymbologySettings {
                                                  "activeSymbolCounts": Array [
                                                    7,
                                                    8,
                                                    9,
                                                    10,
                                                    11,
                                                    12,
                                                    13,
                                                    14,
                                                    15,
                                                    16,
                                                    17,
                                                    18,
                                                    19,
                                                    20,
                                                  ],
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "data-matrix": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "ean13": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "ean8": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "itf": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "qr": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "upca": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                                "upce": SymbologySettings {
                                                  "checksums": Array [],
                                                  "enabled": true,
                                                  "extensions": Array [],
                                                },
                                              },
                                            }
                                          }
                                          style={
                                            Array [
                                              Object {
                                                "flex": 1,
                                              },
                                            ]
                                          }
                                        />
                                        <View
                                          style={
                                            Array [
                                              Object {
                                                "position": "absolute",
                                              },
                                              Object {
                                                "bottom": 0,
                                              },
                                              Object {
                                                "width": "100%",
                                              },
                                              Object {
                                                "height": 64,
                                              },
                                              Object {
                                                "justifyContent": "center",
                                              },
                                              Object {
                                                "backgroundColor": "#000",
                                              },
                                              Object {
                                                "opacity": 0.5,
                                              },
                                            ]
                                          }
                                        >
                                          <Text
                                            style={
                                              Array [
                                                Object {
                                                  "color": "#fff",
                                                },
                                                Object {
                                                  "textAlign": "center",
                                                },
                                                Object {
                                                  "fontWeight": "bold",
                                                },
                                                Object {
                                                  "fontSize": 30,
                                                },
                                              ]
                                            }
                                          >
                                            Scan barcode
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
