// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RoundedButton render fill 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View />
</View>
`;

exports[`RoundedButton render inner title 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "textAlign": "center",
          },
          Object {
            "fontSize": 20,
          },
          Object {
            "color": "#fff",
          },
        ]
      }
    >
      Button Test
    </Text>
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View />
</View>
`;

exports[`RoundedButton render outer title 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View>
    <Text
      style={
        Array [
          Object {
            "textAlign": "center",
          },
          Object {
            "fontSize": 20,
          },
          Object {
            "color": "#B35340",
          },
        ]
      }
    >
      Button Test
    </Text>
  </View>
</View>
`;

exports[`RoundedButton render outer title and icon 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    >
      <SvgMock
        height="100%"
        width="100%"
      />
    </View>
  </View>
  <View>
    <Text
      style={
        Array [
          Object {
            "textAlign": "center",
          },
          Object {
            "fontSize": 20,
          },
          Object {
            "color": "#B35340",
          },
        ]
      }
    >
      Close
    </Text>
  </View>
</View>
`;

exports[`RoundedButton render outline 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#fff",
        },
        Object {
          "borderWidth": 2,
        },
        Object {
          "borderColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View />
</View>
`;

exports[`RoundedButton render transparent 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View />
</View>
`;

exports[`RoundedButton renders correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#B35340",
        },
        Object {
          "alignItems": "center",
        },
        Object {
          "justifyContent": "center",
        },
        Object {
          "width": 64,
        },
        Object {
          "height": 64,
        },
        Object {
          "borderRadius": 9999,
        },
        Object {
          "padding": 4,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "width": 20,
          },
          Object {
            "height": 20,
          },
        ]
      }
    />
  </View>
  <View />
</View>
`;
