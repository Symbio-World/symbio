// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeedbackView renders correctly 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "marginVertical": 64,
      },
      Object {
        "marginHorizontal": 20,
      },
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={true}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <Text
      style={
        Array [
          Object {
            "fontSize": 24,
          },
          Object {
            "fontWeight": "bold",
          },
          Object {
            "marginVertical": 16,
          },
        ]
      }
    >
      ðŸ’¬
      
    </Text>
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        autoFocus={true}
        multiline={true}
        numberOfLines={4}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        rejectResponderTermination={true}
        returnKeyType="send"
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#48bb78",
          "borderRadius": 4,
          "display": "flex",
          "justifyContent": "center",
          "opacity": 1,
          "padding": 16,
          "textAlignVertical": "center",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "center",
            },
            Object {
              "fontSize": 24,
            },
            Object {
              "color": "#fff",
            },
          ]
        }
      >
        Submit feedback
      </Text>
    </View>
  </View>
</RCTScrollView>
`;
